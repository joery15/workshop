{
  
    
        "post0": {
            "title": "Analysis Distribution of Risk",
            "content": "import pandas as pd import numpy as np import seaborn as sns import matplotlib.pyplot as plt . data = pd.read_csv(&quot;datasets_credit_labelled.csv&quot;) data[&quot;Checking account&quot;]=data[&quot;Checking account&quot;].fillna(&quot;None&quot;) data[&quot;Saving accounts&quot;]=data[&quot;Saving accounts&quot;].fillna(&quot;None&quot;) data.head() . Unnamed: 0 Age Sex Job Housing Saving accounts Checking account Credit amount Duration Purpose Risk . 0 0 | 67 | male | 2 | own | None | little | 1169 | 6 | radio/TV | good | . 1 1 | 22 | female | 2 | own | little | moderate | 5951 | 48 | radio/TV | bad | . 2 2 | 49 | male | 1 | own | little | None | 2096 | 12 | education | good | . 3 3 | 45 | male | 2 | free | little | little | 7882 | 42 | furniture/equipment | good | . 4 4 | 53 | male | 2 | free | little | little | 4870 | 24 | car | bad | . E.g. Age Group [18-25):Student, [25,35):Yonge, [35,60):Adult, [60, ): Senior] . For Job: 0 - unskilled and non-resident, 1 - unskilled and resident, 2 - skilled, 3 - highly skilled . Use charts to visulize . Age Group to Risk | Gender to Risk | Housing to Risk | Job to Risk | Saving Accounts to Risk | Credit Amount to Housing-boxplot | Job to Credit Amount | Age to Credit Amount | Any other things that revelent to analysis the relations between any of the columns | Correlation between them | data[&quot;Age_group&quot;]=pd.cut(data[&quot;Age&quot;], [18,25,35,60,100], labels=[&quot;Student&quot;,&quot;Yonge&quot;,&quot;Adult&quot;,&quot;Senior&quot;]) . plt.figure(figsize=(10,5)) sns.countplot(x=&quot;Age_group&quot;, hue=&quot;Risk&quot;, data=data) plt.show() . From the first bar chart, it can be inferred that the company should target on the group of &quot;Yong&quot; and &quot;Adult&quot;. These two groups occupied the largest amount of customers. When compared with relatives between good and bad risk(the orange and blue bar), the&quot;student&quot; group is highly risky while the &quot;Senior&quot; one is more reliable. . sns.countplot(x=&quot;Sex&quot;, hue=&quot;Risk&quot;, data=data, palette=&quot;pastel&quot;) plt.show() . As we can see from the bar chart, the major gender of their customer is male. And the man has more relative risk than women. For the male customer, the good risk amount in the male group is more than double the bad risk, while it is just double in the female group. . sns.countplot(x=&quot;Housing&quot;, hue=&quot;Risk&quot;, data=data,palette=&quot;ch:.25&quot;) plt.show() . From the overall bar in three groups, the group of own housing is the majority of our customers. Furthermore, this kind of person has a relatively good risk than other groups, when compared with the bad risk. On the opposite, the people who do not have any house are the riskiest among the three groups. . data[&quot;Job_group&quot;]=pd.cut(data[&quot;Job&quot;], [-1,0.5,1.5,2.5,3.5], labels=[&quot;unskilled and non-resident&quot;,&quot;unskilled and resident&quot;,&quot;skilled&quot;,&quot;highly skilled&quot;]) plt.figure(figsize=(10,5)) sns.countplot(x=&quot;Job_group&quot;, hue=&quot;Risk&quot;, data=data, palette=&quot;Set3&quot;) plt.show() . Based on the chart, the skilled group occupied the largest group of job. The risk of people in different job levels on good risks relatively higher than that on bad risk. . sns.countplot(x=&quot;Saving accounts&quot;, hue=&quot;Risk&quot;, data=data, palette=&quot;husl&quot;) plt.show() . From what we can see from the diagram, most borrowers have little or no money on saving accounts. But those quite rich and rich people are the safe group, whose good risk is higher relatively than bad risk. . sns.catplot(x=&quot;Housing&quot;, y=&quot;Credit amount&quot;, kind=&quot;box&quot;, data=data, palette=&quot;husl&quot;) plt.show() . From this boxplot, these people who do not have a house to live in are more likely to borrow a high amount of money. Other stable people (own a house or rent a house ) would be at a lower amount of credit. . sns.catplot(x=&quot;Job_group&quot;, y=&quot;Credit amount&quot;, kind=&quot;box&quot;, data=data, height=5, aspect=1.5) plt.show() . As we can see clearly from the boxplot, High skilled people will borrow a higher amount of money to satisfied their needs. For people who do not have skills, they would live at a lower live standard and borrow a lower credit amount. . sns.catplot(x=&quot;Age_group&quot;, y=&quot;Credit amount&quot;, kind=&quot;box&quot;, data=data, showfliers = False, palette=&quot;pastel&quot;) plt.show() . The group of younger and adult would borrow a higher amount than that of student and senior. From these four groups, young people would borrow the highest amount of money, while the senior would borrow the lowest one. . #Job, Credit Amount to Risk data[&quot;Checking account&quot;]=data[&quot;Checking account&quot;].fillna(&quot;none&quot;) sns.catplot(x=&quot;Job&quot;, y=&quot;Credit amount&quot;, hue=&quot;Risk&quot;, kind=&quot;box&quot;, data=data, palette=&quot;Set1&quot;) plt.show() . From the job type of 2 and 3, we can infer from the diagram that the high amount they borrow, the worse risk the debit would be. This principle would be the opposite of other groups. Moreover, a highly skilled group (job_type3) is highest on the credit amount. . data=data.merge(pd.get_dummies(data[&quot;Sex&quot;], drop_first=True, prefix=&quot;Sex&quot;),left_index=True, right_index=True) data=data.merge(pd.get_dummies(data[&quot;Housing&quot;], drop_first=True, prefix=&quot;Housing&quot;),left_index=True, right_index=True) data=data.merge(pd.get_dummies(data[&quot;Saving accounts&quot;], drop_first=True, prefix=&quot;Saving accounts&quot;),left_index=True, right_index=True) data=data.merge(pd.get_dummies(data[&quot;Checking account&quot;], drop_first=True, prefix=&quot;Checking account&quot;),left_index=True, right_index=True) data=data.merge(pd.get_dummies(data[&quot;Purpose&quot;], drop_first=True, prefix=&quot;Purpose&quot;),left_index=True, right_index=True) data=data.merge(pd.get_dummies(data[&quot;Risk&quot;], drop_first=True, prefix=&quot;Risk&quot;),left_index=True, right_index=True) # remove the categorical variable data.drop(columns=[&quot;Sex&quot;, &quot;Housing&quot;, &quot;Saving accounts&quot;, &quot;Checking account&quot;, &quot;Purpose&quot;, &quot;Risk&quot;,&quot;Job_group&quot;,&quot;Age_group&quot;],inplace=True) . plt.figure(figsize=(15,15)) sns.heatmap(data.astype(float).corr(), mask=np.triu(data.astype(float).corr()), cmap = sns.diverging_palette(230, 20, as_cmap=True), annot=True, fmt=&#39;.1g&#39;, square=True, linewidths=.5, cbar_kws={&quot;shrink&quot;: .5}) . &lt;AxesSubplot:&gt; . From the correlation heatmap, it can be seen that the duration has a strong positive relationship with the credit amount. The higher the credit amount, the longer the duration term. And the credit amount has a week positive relation with the job, which means that the more skilled people will borrow a higher amount of money. While for other negative relationships (-0.7,-0.4), these happen in the same category which is exclusive to others. .",
            "url": "https://joery15.github.io/workshop/2020/12/29/Credit-Risk.html",
            "relUrl": "/2020/12/29/Credit-Risk.html",
            "date": " • Dec 29, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://joery15.github.io/workshop/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://joery15.github.io/workshop/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Driven one-year studies Master of Artificial Intelligence from Schulich School of Busines. Excellent communication capabilities. Experience with Convolutional Neural Network (CNN), and specific CNN frameworks like AlexNet and ResNet. Currently seeking a working opportunity in the data-related field. Driven to bring extensive theoretical and practical knowledge of Artificial Intelligence. Passionate about emerging technologies and business intelligence. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://joery15.github.io/workshop/www.linkedin.com/in/luo-jiayi/",
          "relUrl": "/www.linkedin.com/in/luo-jiayi/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://joery15.github.io/workshop/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}